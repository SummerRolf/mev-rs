name: rust-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: rustup update stable
    - name: Rust Cache
      uses: Swatinem/rust-cache@v1
      with:
        cache-on-failure: true
    - name: Build
      run: cargo build --all-targets --all-features --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Validate config
      run: cargo run config example.config.toml

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          args: --all-targets --all-features -- -D warnings
          token: ${{ secrets.GITHUB_TOKEN }}
