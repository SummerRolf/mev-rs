[workspace]
resolver = "2"
members = [
    "bin/mev",
    "bin/utils",
    "mev-boost-rs",
    "mev-relay-rs",
    "mev-build-rs",
    "mev-rs",
]
default-members = ["bin/mev"]

[workspace.package]
version = "0.3.0"

[workspace.dependencies]
ethereum-consensus = { git = "https://github.com/ralexstokes/ethereum-consensus", rev = "c84f44ee7ec04613adf5f2be845df35e05de1efc" }
beacon-api-client = { git = "https://github.com/ralexstokes/ethereum-consensus", rev = "c84f44ee7ec04613adf5f2be845df35e05de1efc" }

reth-payload-builder = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth-primitives = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth-provider = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth-transaction-pool = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth-interfaces = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth-revm = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
reth = { git = "https://github.com/paradigmxyz/reth", rev = "5dd5555c5c7d8e43420e273e7005b8af63a847a5" }
revm = "3.5.0"

[patch.crates-io]
# We patch `revm-primitives` so that all generated files go into the expected place ("OUT_DIR") which
# works well with rust `nix` builders and does not work well otherwise.
# TODO: It looks like later versions of this crate remove the problematic build script and so once `reth` updates
# (which indirectly uses this dependency) then we can drop this patch.
revm-primitives = { git = "https://github.com/ralexstokes/revm", rev = "929530a5b2575c97f3c055f4f8d8b9ba273cb3dd" }
